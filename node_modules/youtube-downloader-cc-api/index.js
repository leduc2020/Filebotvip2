const axios = require("axios");
const fs = require("fs");
const path = require("path");
const cliProgress = require("cli-progress");

const author = "Jonell Hutchin Magallanes";

const PRIMARY_API = "https://jonell01-youtube-dl-ccapi-hutchin.hf.space/ytdl";
const BACKUP_API = "https://jonell01-youtubedlnodjescc.hf.space/ytdl";

async function fetchDownload(url, type, responseType, apiURL) {
 console.log("Downloading......");
  const progressBar = new cliProgress.SingleBar(
    {
      format: "Downloading [{bar}] {percentage}% | {value}/{total} bytes",
    },
    cliProgress.Presets.shades_classic
  );

  try {
    const response = await axios.get(apiURL, {
      params: { url, type, dl: 0 },
      responseType: responseType === "direct" ? "stream" : "json",
      onDownloadProgress: (progressEvent) => {
        const total = progressEvent.total || 1;
        const loaded = progressEvent.loaded;

        if (!progressBar.isActive && total) {
          progressBar.start(total, 0);
        }

        progressBar.update(loaded);
      },
    });

    progressBar.stop();
    console.log("Download complete!");

    if (responseType === "direct") {
      const filePath = path.join(__dirname, "downloaded_file.mp4");
      const writer = fs.createWriteStream(filePath);

      response.data.pipe(writer);

      return new Promise((resolve, reject) => {
        writer.on("finish", () => resolve({ message: "File downloaded successfully!", path: filePath, author }));
        writer.on("error", reject);
      });
    } else {
      return { ...response.data, author };
    }
  } catch (error) {
    progressBar.stop();
    console.error(`Error fetching from ${apiURL}:`, error.message);
    return null;
  }
}

async function getDownloadDetails(url, type, responseType) {
  if (!url || !type || !responseType) {
    throw new Error("Parameters 'url', 'type', and 'responseType' are required.");
  }

  let result = await fetchDownload(url, type, responseType, PRIMARY_API);
  if (!result) {
    result = await fetchDownload(url, type, responseType, BACKUP_API);
  }

  if (!result) {
    return { error: "Both APIs have errors. Please contact the developer for more info. Contact Jonell Hutchin Magallanes on Facebook." };
  }

  return result;
}

module.exports = { getDownloadDetails };